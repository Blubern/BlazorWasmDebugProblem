@page "/weather"
@using BlazorAppWasmDebugIssue.Client.Dto
@inject IHttpClientFactory httpClientFactory

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = httpClientFactory.CreateClient("WebAPI");

        var serviceCall1 = httpClient.GetFromJsonAsync<WeatherForecast[]>("GetAll");
        var serviceCall2 = httpClient.GetFromJsonAsync<WeatherForecast[]>("GetAll");
        var serviceCall3 = httpClient.GetFromJsonAsync<WeatherForecast[]>("GetAll");

        await Task.WhenAll(serviceCall1, serviceCall2, serviceCall3);

        forecasts = serviceCall1.Result;
    }
}
